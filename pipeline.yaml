apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: clone-build-push-deploy
spec:
  params:
    - name: REPO-SOURCE
    - name: REPO-CONFIG
    - name: IMAGE
    - name: TAG
  workspaces:
    - name: workspace
  tasks:
    - name: fetch-repository-source
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
      params:
        - name: url
          value: $(params.REPO-SOURCE)
        - name: deleteExisting
          value: "true"
    - name: build-push-image
      taskRef:
        name: buildah
      runAfter:
        - fetch-repository-source
      workspaces:
        - name: source
          workspace: workspace
      params:
        - name: IMAGE
          value: "$(params.IMAGE):$(params.TAG)"
        - name: FORMAT
          value: "docker"
    - name: fetch-repository-config
      taskRef:
        name: git-clone
      runAfter:
        - build-push-image
      workspaces:
        - name: output
          workspace: workspace
      params:
        - name: url
          value: $(params.REPO-CONFIG)
        - name: deleteExisting
          value: "true"
    - name: create-deployment
      taskRef:
        name: kubernetes-actions
      runAfter:
        - fetch-repository-config
      params:
        - name: script
          value: |
            kubectl apply --filename deploy.yaml
      workspaces:
        - name: manifest-dir
          workspace: workspace
    - name: validation-test
      taskRef:
        name: newman
      runAfter:
        - create-deployment
      params:
        - name: COLLECTION
          value: https://raw.githubusercontent.com/dmedina-varegos/myApp-config/main/validation.postman_collection.json
        - name: ENVIRONMENT
          value: newman-default-env.json
    - name: functional-test
      taskRef:
        name: newman
      runAfter:
        - create-deployment
      params:
        - name: COLLECTION
          value: https://raw.githubusercontent.com/dmedina-varegos/myApp-config/main/functional.postman_collection.json
        - name: ENVIRONMENT
          value: newman-default-env.json
  finally:
    - name: delete-deployment-if-failed  # this task verifies the status of dev test, it fails if testing fails
      when:
        - input: $(tasks.status)
          operator: in
          values: ["Failed"]
      params:
        - name: script
          value: |
                kubectl delete deployment myapp-deployment
      taskRef:
        name: kubernetes-actions
      workspaces:
        - name: manifest-dir
          workspace: workspace